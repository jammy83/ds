{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww19040\viewh13280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
Through my stories, how am I emulating the leadership principles?\
\
Efficiency:\
\
My team started supporting SAN and we observed several OOQ issues which was affecting the productivity of our team. So I proactively developed gdb scripts that could, first, track and trace the packets through different layers and secondly identify the root cause of the OOQ issues which resulted in saving significant amount of debugging time for the engineers. This was highly appreciated by the team members and earned me a spot award.\
\
Complex problem -> simple solution:\
I was designing the U/R feature for IPspaces project and I had to come up with the logic that prepares the cluster for an U/R event and this runs as soon as the system boots up with the respective build. And the challenge is to go beyond latency guarantees to help minimize the outage/setup time. The IPspaces feature operated on several layers and interacted with many sub-systems. And if I had followed suit with existing methodologies, the logic ended up being complex with strict ordering of events and heavily dependent on sub-system states. This was hard to maintain, scale and was error prone. I re-engineered the logic to make the operations idempotent and stripped off the state dependencies and introduced re-try as logic as appropriate. This resulted in easy-to-maintain and scalable code and that offered the flexibility to repair specific tasks that failed.\
\
Disagreement and reconciliation:\
My teammate and I were having a design discussion about a new feature recently. This feature includes few command line options that offered more fine-grained control and that raised conflicting interactions with existing ones. There was basically a tradeoff between consistency and flexibility for the customers and that was the reason behind our disagreement. I was proposing to keep the system consistent and offers correctness. While my teammate wanted to provide flexibility to the customers. we had to find a middle ground and agreed to display a warning message to the customer during such scenarios  \
\
Judgement call to unknown risk:\
First, it is very uncommon to find yourself in an situation like this, since almost all of the features go through prototyping, analysis phase before taken through further stages. But I did find myself in such a unique position once. That was when I was designing the automatic failover mechanism for logical interfaces in the event a node goes offline or there is a link failure and the ports can no longer host the interfaces. I had to come up with the ordering among the nodes that would be the failover targets for the impacted interfaces. This is risky since its dependent on the customer environment and usage and any wrong targets might result in data disruption or outage which is unacceptable. I had to reach out to our lab, gather general network configurations, held few brainstorming sessions and concluded on safer and best approach forward. I extended the solution for customers to customize the behavior that would best suit their environment as well.\
\
Time when you failed to meet a deadline:\
When working on IPspaces project, there was an instance when I was working on a core component for the VifMgr team and had taken up an intricate piece. Estimation for that piece of work was tricky since there were lot of unknowns and I had to actually start implementing sooner to get a better understanding. After few iterations the approach I took to complete the feature item was to break down the feature into smaller chunks based on the current understanding of the problem and refine the estimates as I learnt things and kept my manager in loop and made sure there are no surprises in the end.\
\
Co-worker criticism:\
I am not sure if I would call it criticism, but definitely during design discussions there are times when a team mate won\'92t agree or see your point. At that time it is important to ensure that you have explained your viewpoint clearly and is understood and approach it objectively. Often customer centric focus and simplicity brings resolution. In cases when it is not clear, we seek subject matter experts from other teams to clarify scenarios involving interactions with other subsystems or reach out to the technical directors or engage with product managers to understand or bring clarity and customer perspective.\
\
Many projects going on around the same time; steps taken:\
When I was working on the IPspaces project, I was also pulled in to help with the CSM team meet their deadlines since I was one of the core member there before I moved to pick up other projects/areas. During that period I had to manage few projects simultaneously and assist with burt backlog.\
Some measures I had taken: clear understanding and by-in as what is expected to achieve completion, have short term milestones and personal deadlines to track progress.\
How to determine priorities: take inputs from management on project priorities and milestone and derive goals and deadlines based on that.\
\
Flexibility:\
problems and stresses that tested coping skills: Right around the time I joined, we had a release deadline and I was given some responsibility with strict deadlines as well. That was the time I had no knowledge of the product, I was fresh out of college with no prior work experience and I had to familiarize myself with the process as well. So that time period was stressful and I had to spend few hours extra to catch up faster so that I can contribute and also used to reach out to my buddy to get any clarifications done.\
\
During IPspaces project, I started realizing that one of my project mates had trouble coming up with speed on few task items and I proactively helped her by explaining the concepts and had spent some time having design discussions on few instances. In the end, she was able to catch up and deliver her responsibilities on time as well.\
\
When did you influence the outcome of the project:\
In Simplicity project, where they were facing some struggles meeting project deadlines, I jumped in since it was built on the IPspaces feature and since I was the subject matter expert on few deliverables within IPspaces project, and provided feedback first to trim the project to identify essential pieces that needs to be delivered first and other nice-to-have feature items. Later on, I was also involved in design discussions for items with feature interactions with the IPspaces project. I played a crucial role there that heavily helped them meet their deadlines and come up with a shippable feature for the release.\
\
Mentorship and delegation:\
As a senior member of the team, new feature and dependency requests come directly to me. Often times, these new requests are exciting to work on. But, in order to ensure that other junior members within the team get an opportunity to work on customer facing features, I have delegated responsibilities but at the same time ensured that the feature gets delivered on target through continuous support and mentoring.\
\
How to ensure that someone understands what you are saying:\
Rather than explaining the entire idea in one go, I would first split the idea into smaller chunks and make sure the person is following as I am explaining it. If the idea involves any interactions I would try to sketch it on the white board and come up with real world analogies.\
\
Customer Obsession:\
\
Ownership: (long term vision not forsaking short term results) -  I ensure th\
I have always liked to see my previous projects fly high even after I move on to entirely different teams since I continue to feel the ownership though I pass on the reigns to someone else formally. I ensure that through continuos technical support, reviews/approval of specs, participating in design discussions etc. \
Even after moving on from CSM team, I continued to review and approve specs and use cases since I was a subject matter expert and had a good understanding of the internals of CSM. \
\
Strength and weakness:\
\
\
\
\
\
}